name: Batch Process Files with OCR

on:
  workflow_dispatch:
    inputs:
      file_type:
        description: 'Choose file type to process'
        required: true
        type: choice
        options:
          - pdf
          - image
      additional_param:  
        description: 'Additional parameter(s)'
        required: false
        default: -l tha+eng

permissions:
  contents: write

jobs:
  process_files:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: ${{ steps.get-files.outputs.file_list }}
    env:
      INPUT_DIR: ./input
      OUTPUT_DIR: ./output

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get files to process
      id: get-files
      run: |
        case "${{ github.event.inputs.file_type }}" in
          pdf)
            files=$(find $INPUT_DIR -maxdepth 1 -iname '*.pdf' -printf '%f\n')
            ;;
          image)
            files=$(find $INPUT_DIR -maxdepth 1 \( -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.png' -o -iname '*.tiff' -o -iname '*.bmp' \) -printf '%f\n')
            ;;
        esac
        echo "file_list=${files}" >> $GITHUB_OUTPUT

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ocrmypdf
        # Tesseract language handling remains similar to original

    - name: Create output directory
      run: mkdir -p $OUTPUT_DIR

    - name: Process file
      run: |
        filename="${{ matrix.file }}"
        ext="${filename##*.}"
        timestamp=$(date +"%Y%m%d_%H%M%S")
        base="${filename%.*}"

        case "${{ github.event.inputs.file_type }}" in
          pdf)
            ocrmypdf ${{ github.event.inputs.additional_param }} --skip-text --clean \
              --sidecar "$OUTPUT_DIR/${base}_${timestamp}.txt" \
              "$INPUT_DIR/$filename" "$OUTPUT_DIR/${base}_${timestamp}.pdf"
            ;;
          image)
            lower_ext=$(echo "$ext" | tr '[:upper:]' '[:lower:]')
            tesseract ${{ github.event.inputs.additional_param }} "$INPUT_DIR/$filename" \
              "$OUTPUT_DIR/${base}_${timestamp}" pdf txt
            ;;
        esac

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: processed-files
        path: $OUTPUT_DIR/*
        retention-days: 7

    - name: Cleanup processed files
      run: |
        git rm "$INPUT_DIR/${{ matrix.file }}"
        rm -f "$INPUT_DIR/${{ matrix.file }}"

    - name: Commit changes
      run: |
        git config --local user.name "github-actions"
        git config --local user.email "github-actions@github.com"
        git add -A
        git commit -m "Processed ${{ matrix.file }}"
        git push
