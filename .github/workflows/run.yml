name: Batch File Processing with OCR

on:
  workflow_dispatch:
    inputs:
      file_type:
        description: 'Choose file type to process (PDF or Image)'
        required: true
        type: choice
        options:
          - pdf
          - image
      additional_param:
        description: 'Additional OCR parameters'
        required: false
        default: -l tha+eng

permissions:
  contents: write

jobs:
  process_files:
    runs-on: ubuntu-latest
    env:
      INPUT_DIR: ./input
      OUTPUT_DIR: ./output

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get file list
      id: get-files
      run: |
        case "${{ github.event.inputs.file_type }}" in
          pdf)
            find $INPUT_DIR -maxdepth 1 -iname '*.pdf' -printf '%f\n' > filelist.txt
            ;;
          image)
            find $INPUT_DIR -maxdepth 1 \( -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.png' -o -iname '*.tiff' -o -iname '*.bmp' \) -printf '%f\n' > filelist.txt
            ;;
        esac
        echo "files=$(base64 -w0 filelist.txt)" >> $GITHUB_OUTPUT

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ocrmypdf tesseract-ocr
        
        # language installation 
        lang_codes=$(echo "${{ github.event.inputs.additional_param }}" | sed -n 's/.*-l[[:space:]]*\([a-zA-Z]\{3\}\([+][a-zA-Z]\{3\}\)*\)\b.*/\1/p')
        if [ -n "$lang_codes" ]; then
          for lang_code in $(echo "$lang_codes" | tr '+' ' '); do
            if [ "$lang_code" = "eng" ]; then
              echo "Skipping language code 'eng'"
              continue
            fi
            echo "Installing Tesseract package for language: $lang_code"
            sudo apt-get install -y "tesseract-ocr-$lang_code"
          done
        else
          echo "No language codes found after -l flag."
        fi

    - name: Create output directory
      run: mkdir -p $OUTPUT_DIR

    - name: Process files
      env:
        FILE_LIST: ${{ steps.get-files.outputs.files }}
      run: |
        echo "$FILE_LIST" | base64 --decode > filelist.txt
        
        while IFS= read -r filename; do
          [ -z "$filename" ] && continue

          echo "Processing: $filename"
          base="${filename%.*}"
          ext="${filename##*.}"
          timestamp=$(date +"%Y%m%d_%H%M%S")

          if [ ! -f "$INPUT_DIR/$filename" ]; then
            echo "File not found: $filename"
            continue
          fi

          case "${{ github.event.inputs.file_type }}" in
            pdf)
              ocrmypdf ${{ github.event.inputs.additional_param }} --skip-text --clean \
                --sidecar "$OUTPUT_DIR/${base}_${timestamp}.txt" \
                "$INPUT_DIR/$filename" "$OUTPUT_DIR/${base}_${timestamp}.pdf"
              ;;
            image)
              tesseract ${{ github.event.inputs.additional_param }} \
                "$INPUT_DIR/$filename" "$OUTPUT_DIR/${base}_${timestamp}" pdf txt
              ;;
          esac

          if [ $? -eq 0 ]; then
            git rm "$INPUT_DIR/$filename"
            rm -f "$INPUT_DIR/$filename"
            echo "Successfully processed: $filename"
          else
            echo "Error processing: $filename"
            exit 1
          fi
        done < filelist.txt

    - name: Commit changes
      run: |
        git config --local user.name "github-actions"
        git config --local user.email "github-actions@github.com"
        git add -A
        git commit -m "Processed ${{ github.event.inputs.file_type }} files"
        git push

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: processed-files
        path: $OUTPUT_DIR/*
        retention-days: 7
