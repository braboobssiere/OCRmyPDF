name: Process PDF with OCRmyPDF

on:
  workflow_dispatch:
    inputs:
      input_file:
        description: 'Input PDF file name from /input/ folder'
        required: true
      additional_param:  
        description: 'Additional parameter(s)'
        required: false
        default: -l tha+eng

permissions:
  contents: write

jobs:
  process_pdf:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install OCRmyPDF and Tesseract
      run: |
        sudo apt-get update
        sudo apt-get install -y ocrmypdf

        # Extract the language code from the additional_param
        lang_codes=$(echo "${{ github.event.inputs.additional_param }}" | sed -n 's/.*-l[[:space:]]*\([a-zA-Z]\{3\}\([+][a-zA-Z]\{3\}\)*\)\b.*/\1/p')
        if [ -n "$lang_codes" ]; then
          # Replace '+' with space and iterate through each language code
          for lang_code in $(echo "$lang_codes" | tr '+' ' '); do
            if [ "$lang_code" = "eng" ]; then
              echo "Skipping language code 'eng'"
              continue
            fi
            echo "Installing Tesseract package for language: $lang_code"
            sudo apt-get install -y "tesseract-ocr-$lang_code"
          done
        else
          echo "No language codes found after -l flag."
        fi

    - name: Create output directory
      run: mkdir -p ./output

    - name: Check if input is an image
      id: check_input
      run: |
        FILE_NAME="${{ github.event.inputs.input_file }}"
        FILE_EXT=$(echo "$FILE_NAME" | awk -F. '{if (NF>1) {print $NF}}' | tr '[:upper:]' '[:lower:]')  # Ensure the extension is lowercase
        echo "File extension: $FILE_EXT"
        if [[ "$FILE_EXT" =~ ^(jpg|jpeg|png|tiff|bmp)$ ]]; then
          echo "Input is an image: $FILE_NAME"
          echo "is_image=true" >> $GITHUB_ENV  
        else
          echo "Input is not an image"
          echo "is_image=false" >> $GITHUB_ENV
        fi

    - name: Process image
      if: env.is_image == 'true'
      run: |
        set -euo pipefail
        echo "Current directory: $(pwd)"
        OUTPUT_DIR="$(pwd)/output"
        
        mkdir -p "$OUTPUT_DIR"
        tesseract ${{ github.event.inputs.additional_param }} "./input/${{ github.event.inputs.input_file }}" "$OUTPUT_DIR/output_" pdf txt
        
    - name: Process PDF
      if: env.is_image == 'false'
      run: |
        ocrmypdf ${{ github.event.inputs.additional_param }} --skip-text --clean --sidecar "./output/output_$(date +"%Y%m%d_%H%M%S").txt" "./input/${{ github.event.inputs.input_file }}" "./output/output_$(date +"%Y%m%d_%H%M%S").pdf"

    - name: Upload output PDF
      uses: actions/upload-artifact@v4
      with:
        name: output-pdf
        path: ./output/*
        retention-days: 7

#    - name: Delete input file
  #    run: |
   #     rm -f "./input/${{ github.event.inputs.input_file }}"

 #   - name: Commit changes
#      run: |
#        git config --local user.name "github-actions"
 #       git config --local user.email "github-actions@github.com"
 #       git add "./input/${{ github.event.inputs.input_file }}"
  #      git commit -m "Delete input file"
   #     git push
